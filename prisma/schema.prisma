generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Endereco {
    id          Int      @id @default(autoincrement())
    CEP         String
    cidade      String
    estado      String
    bairro      String
    complemento String
    empresa     Empresa?
}

model Empresa {
    id          Int    @id @default(autoincrement())
    razaoSocial String
    CNPJ        String @unique

    endereco  Endereco @relation(fields: [ederecoId], references: [id], onDelete: Cascade)
    ederecoId Int      @unique

    owner              User               @relation(fields: [ownerId], references: [id])
    ownerId            String
    licensasAmbientais LicensaAmbiental[]
}

model LicensaAmbiental {
    id             Int      @id @default(autoincrement())
    numero         String
    orgaoAmbiental String
    emissao        DateTime
    validade       DateTime

    empresa   Empresa @relation(fields: [empresaId], references: [id])
    empresaId Int
}

// Modelos auto gerados pelo NextAuth, necessarios para o funcionamento da lib
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    empresas      Empresa[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
